;; Leaves: 30-  Connectivity: %5.14285714286 Contradictions: 10
(load "/Users/nernst/Dropbox/research/techne/src/tms/techne-psm.lisp")
(defvar *rekb* (create-rekb "Random rekb"))
(setf 	node-0 (declare-atomic nil "Goal-0" :GOAL *rekb*)
	node-1 (declare-atomic nil "Goal-1" :GOAL *rekb*)
	node-2 (declare-atomic nil "Goal-2" :GOAL *rekb*)
	node-3 (declare-atomic nil "Goal-3" :GOAL *rekb*)
	node-4 (declare-atomic nil "Goal-4" :GOAL *rekb*)
	node-5 (declare-atomic nil "Goal-5" :GOAL *rekb*)
	node-6 (declare-atomic nil "Goal-6" :GOAL *rekb*)
	node-7 (declare-atomic nil "Task-7" :TASK *rekb*)
	node-8 (declare-atomic nil "Task-8" :TASK *rekb*)
	node-9 (declare-atomic nil "Goal-9" :GOAL *rekb*)
	node-10 (declare-atomic nil "Goal-10" :GOAL *rekb*)
	node-11 (declare-atomic nil "Goal-11" :GOAL *rekb*)
	node-12 (declare-atomic nil "Goal-12" :GOAL *rekb*)
	node-13 (declare-atomic nil "Goal-13" :GOAL *rekb*)
	node-14 (declare-atomic nil "Task-14" :TASK *rekb*)
	node-15 (declare-atomic nil "Goal-15" :GOAL *rekb*)
	node-16 (declare-atomic nil "Task-16" :TASK *rekb*)
	node-17 (declare-atomic nil "Task-17" :TASK *rekb*)
	node-18 (declare-atomic nil "Goal-18" :GOAL *rekb*)
	node-19 (declare-atomic nil "Goal-19" :GOAL *rekb*)
	node-20 (declare-atomic nil "Goal-20" :GOAL *rekb*)
	node-21 (declare-atomic nil "Task-21" :TASK *rekb*)
	node-22 (declare-atomic nil "Goal-22" :GOAL *rekb*)
	node-23 (declare-atomic nil "Task-23" :TASK *rekb*)
	node-24 (declare-atomic nil "Task-24" :TASK *rekb*)
	node-25 (declare-atomic nil "Goal-25" :GOAL *rekb*)
	node-26 (declare-atomic nil "Goal-26" :GOAL *rekb*)
	node-27 (declare-atomic nil "Task-27" :TASK *rekb*)
	node-28 (declare-atomic nil "Task-28" :TASK *rekb*)
	node-29 (declare-atomic nil "Task-29" :TASK *rekb*)
	node-30 (declare-atomic nil "Task-30" :TASK *rekb*)
	node-31 (declare-atomic nil "Task-31" :TASK *rekb*)
	node-32 (declare-atomic nil "Task-32" :TASK *rekb*)
	node-33 (declare-atomic nil "Task-33" :TASK *rekb*)
	node-34 (declare-atomic nil "Task-34" :TASK *rekb*)
	node-35 (declare-atomic nil "Task-35" :TASK *rekb*)
	node-36 (declare-atomic nil "Task-36" :TASK *rekb*)
	node-37 (declare-atomic nil "Task-37" :TASK *rekb*)
	node-38 (declare-atomic nil "Task-38" :TASK *rekb*)
	node-39 (declare-atomic nil "Task-39" :TASK *rekb*)
	node-40 (declare-atomic nil "Task-40" :TASK *rekb*)
	node-41 (declare-atomic nil "Task-41" :TASK *rekb*)
	node-42 (declare-atomic nil "Task-42" :TASK *rekb*)
	node-43 (declare-atomic nil "Task-43" :TASK *rekb*)
	node-44 (declare-atomic nil "Task-44" :TASK *rekb*)
	node-45 (declare-atomic nil "Task-45" :TASK *rekb*)
	node-46 (declare-atomic nil "Goal-46" :GOAL *rekb*)
	node-47 (declare-atomic nil "Task-47" :TASK *rekb*)
	node-48 (declare-atomic nil "Task-48" :TASK *rekb*)
	node-49 (declare-atomic nil "Task-49" :TASK *rekb*)
)
(assrt-formula node-0 (list node-1 node-2 node-40) :DA "phi-0-0" *rekb*)
(assrt-formula node-0 (list node-9 node-11 node-12) :DA "phi-0-1" *rekb*)
(assrt-formula node-0 (list node-48 node-19 node-28) :DA "phi-0-2" *rekb*)
(assrt-formula node-1 (list node-32 node-3 node-4) :DA "phi-1-0" *rekb*)
(assrt-formula node-1 (list node-5 node-6 node-7) :DA "phi-1-1" *rekb*)
(assrt-formula node-1 (list node-8 node-9 node-42) :DA "phi-1-2" *rekb*)
(assrt-formula node-1 (list node-39 node-22) :DA "phi-1-3" *rekb*)
(assrt-formula node-2 (list node-6 node-3 node-36) :DA "phi-2-0" *rekb*)
(assrt-formula node-2 (list node-45 node-30) :DA "phi-2-1" *rekb*)
(assrt-formula node-3 (list node-25 node-15) :DA "phi-3-0" *rekb*)
(assrt-formula node-4 (list node-16 node-27 node-36) :DA "phi-4-0" *rekb*)
(assrt-formula node-4 (list node-37) :DA "phi-4-1" *rekb*)
(assrt-formula node-5 (list node-42) :DA "phi-5-0" *rekb*)
(assrt-formula node-6 (list node-24) :DA "phi-6-0" *rekb*)
(assrt-formula node-9 (list node-10 node-45 node-47) :DA "phi-9-0" *rekb*)
(assrt-formula node-9 (list node-48 node-17 node-18) :DA "phi-9-1" *rekb*)
(assrt-formula node-10 (list node-21) :DA "phi-10-0" *rekb*)
(assrt-formula node-11 (list node-18 node-20 node-30) :DA "phi-11-0" *rekb*)
(assrt-formula node-12 (list node-35 node-13 node-15) :DA "phi-12-0" *rekb*)
(assrt-formula node-13 (list node-44 node-38 node-14) :DA "phi-13-0" *rekb*)
(assrt-formula node-46 (list node-49) :DA "phi-46-0" *rekb*)
(assrt-formula node-15 (list node-43 node-21 node-46) :DA "phi-15-0" *rekb*)
(assrt-formula node-18 (list node-41 node-23) :DA "phi-18-0" *rekb*)
(assrt-formula node-19 (list node-34) :DA "phi-19-0" *rekb*)
(assrt-formula node-20 (list node-24 node-33) :DA "phi-20-0" *rekb*)
(assrt-formula node-22 (list node-26 node-27) :DA "phi-22-0" *rekb*)
(assrt-formula node-25 (list node-33 node-29) :DA "phi-25-0" *rekb*)
(assrt-formula node-26 (list node-31) :DA "phi-26-0" *rekb*)
(assrt-formula (contradiction *rekb*) (list node-35 node-29) :DA "psi-0" *rekb*)
(assrt-formula (contradiction *rekb*) (list node-24 node-12) :DA "psi-1" *rekb*)
(assrt-formula (contradiction *rekb*) (list node-5 node-31) :DA "psi-2" *rekb*)
(assrt-formula (contradiction *rekb*) (list node-33 node-42) :DA "psi-3" *rekb*)
(assrt-formula (contradiction *rekb*) (list node-8 node-38) :DA "psi-4" *rekb*)
(assrt-formula (contradiction *rekb*) (list node-2 node-30) :DA "psi-5" *rekb*)
(assrt-formula (contradiction *rekb*) (list node-47 node-41) :DA "psi-6" *rekb*)
(assrt-formula (contradiction *rekb*) (list node-40 node-9) :DA "psi-7" *rekb*)
(assrt-formula (contradiction *rekb*) (list node-33 node-4) :DA "psi-8" *rekb*)
(assrt-formula (contradiction *rekb*) (list node-40 node-12) :DA "psi-9" *rekb*)
