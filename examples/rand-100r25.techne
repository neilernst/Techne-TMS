;; Leaves: 83-  Connectivity: %2.60606060606 Contradictions: 4
(load "/Users/nernst/Dropbox/research/techne/src/tms/techne-psm.lisp")
(defvar *rekb* (create-rekb "Random rekb"))
(setf 	node-0 (declare-atomic nil "Goal-0" :GOAL *rekb*)
	node-1 (declare-atomic nil "Goal-1" :GOAL *rekb*)
	node-2 (declare-atomic nil "Goal-2" :GOAL *rekb*)
	node-3 (declare-atomic nil "Goal-3" :GOAL *rekb*)
	node-4 (declare-atomic nil "Goal-4" :GOAL *rekb*)
	node-5 (declare-atomic nil "Task-5" :TASK *rekb*)
	node-6 (declare-atomic nil "Task-6" :TASK *rekb*)
	node-7 (declare-atomic nil "Task-7" :TASK *rekb*)
	node-8 (declare-atomic nil "Task-8" :TASK *rekb*)
	node-9 (declare-atomic nil "Task-9" :TASK *rekb*)
	node-10 (declare-atomic nil "Task-10" :TASK *rekb*)
	node-11 (declare-atomic nil "Task-11" :TASK *rekb*)
	node-12 (declare-atomic nil "Task-12" :TASK *rekb*)
	node-13 (declare-atomic nil "Goal-13" :GOAL *rekb*)
	node-14 (declare-atomic nil "Goal-14" :GOAL *rekb*)
	node-15 (declare-atomic nil "Goal-15" :GOAL *rekb*)
	node-16 (declare-atomic nil "Goal-16" :GOAL *rekb*)
	node-17 (declare-atomic nil "Task-17" :TASK *rekb*)
	node-18 (declare-atomic nil "Task-18" :TASK *rekb*)
	node-19 (declare-atomic nil "Task-19" :TASK *rekb*)
	node-20 (declare-atomic nil "Task-20" :TASK *rekb*)
	node-21 (declare-atomic nil "Goal-21" :GOAL *rekb*)
	node-22 (declare-atomic nil "Task-22" :TASK *rekb*)
	node-23 (declare-atomic nil "Goal-23" :GOAL *rekb*)
	node-24 (declare-atomic nil "Task-24" :TASK *rekb*)
	node-25 (declare-atomic nil "Task-25" :TASK *rekb*)
	node-26 (declare-atomic nil "Goal-26" :GOAL *rekb*)
	node-27 (declare-atomic nil "Goal-27" :GOAL *rekb*)
	node-28 (declare-atomic nil "Task-28" :TASK *rekb*)
	node-29 (declare-atomic nil "Task-29" :TASK *rekb*)
	node-30 (declare-atomic nil "Task-30" :TASK *rekb*)
	node-31 (declare-atomic nil "Task-31" :TASK *rekb*)
	node-32 (declare-atomic nil "Goal-32" :GOAL *rekb*)
	node-33 (declare-atomic nil "Task-33" :TASK *rekb*)
	node-34 (declare-atomic nil "Task-34" :TASK *rekb*)
	node-35 (declare-atomic nil "Task-35" :TASK *rekb*)
	node-36 (declare-atomic nil "Task-36" :TASK *rekb*)
	node-37 (declare-atomic nil "Task-37" :TASK *rekb*)
	node-38 (declare-atomic nil "Task-38" :TASK *rekb*)
	node-39 (declare-atomic nil "Task-39" :TASK *rekb*)
	node-40 (declare-atomic nil "Goal-40" :GOAL *rekb*)
	node-41 (declare-atomic nil "Task-41" :TASK *rekb*)
	node-42 (declare-atomic nil "Task-42" :TASK *rekb*)
	node-43 (declare-atomic nil "Task-43" :TASK *rekb*)
	node-44 (declare-atomic nil "Task-44" :TASK *rekb*)
	node-45 (declare-atomic nil "Task-45" :TASK *rekb*)
	node-46 (declare-atomic nil "Task-46" :TASK *rekb*)
	node-47 (declare-atomic nil "Task-47" :TASK *rekb*)
	node-48 (declare-atomic nil "Task-48" :TASK *rekb*)
	node-49 (declare-atomic nil "Task-49" :TASK *rekb*)
	node-50 (declare-atomic nil "Task-50" :TASK *rekb*)
	node-51 (declare-atomic nil "Task-51" :TASK *rekb*)
	node-52 (declare-atomic nil "Goal-52" :GOAL *rekb*)
	node-53 (declare-atomic nil "Task-53" :TASK *rekb*)
	node-54 (declare-atomic nil "Task-54" :TASK *rekb*)
	node-55 (declare-atomic nil "Task-55" :TASK *rekb*)
	node-56 (declare-atomic nil "Task-56" :TASK *rekb*)
	node-57 (declare-atomic nil "Task-57" :TASK *rekb*)
	node-58 (declare-atomic nil "Task-58" :TASK *rekb*)
	node-59 (declare-atomic nil "Task-59" :TASK *rekb*)
	node-60 (declare-atomic nil "Task-60" :TASK *rekb*)
	node-61 (declare-atomic nil "Task-61" :TASK *rekb*)
	node-62 (declare-atomic nil "Task-62" :TASK *rekb*)
	node-63 (declare-atomic nil "Task-63" :TASK *rekb*)
	node-64 (declare-atomic nil "Goal-64" :GOAL *rekb*)
	node-65 (declare-atomic nil "Task-65" :TASK *rekb*)
	node-66 (declare-atomic nil "Task-66" :TASK *rekb*)
	node-67 (declare-atomic nil "Task-67" :TASK *rekb*)
	node-68 (declare-atomic nil "Task-68" :TASK *rekb*)
	node-69 (declare-atomic nil "Task-69" :TASK *rekb*)
	node-70 (declare-atomic nil "Task-70" :TASK *rekb*)
	node-71 (declare-atomic nil "Task-71" :TASK *rekb*)
	node-72 (declare-atomic nil "Task-72" :TASK *rekb*)
	node-73 (declare-atomic nil "Task-73" :TASK *rekb*)
	node-74 (declare-atomic nil "Task-74" :TASK *rekb*)
	node-75 (declare-atomic nil "Task-75" :TASK *rekb*)
	node-76 (declare-atomic nil "Task-76" :TASK *rekb*)
	node-77 (declare-atomic nil "Task-77" :TASK *rekb*)
	node-78 (declare-atomic nil "Task-78" :TASK *rekb*)
	node-79 (declare-atomic nil "Task-79" :TASK *rekb*)
	node-80 (declare-atomic nil "Task-80" :TASK *rekb*)
	node-81 (declare-atomic nil "Task-81" :TASK *rekb*)
	node-82 (declare-atomic nil "Task-82" :TASK *rekb*)
	node-83 (declare-atomic nil "Task-83" :TASK *rekb*)
	node-84 (declare-atomic nil "Task-84" :TASK *rekb*)
	node-85 (declare-atomic nil "Task-85" :TASK *rekb*)
	node-86 (declare-atomic nil "Task-86" :TASK *rekb*)
	node-87 (declare-atomic nil "Task-87" :TASK *rekb*)
	node-88 (declare-atomic nil "Task-88" :TASK *rekb*)
	node-89 (declare-atomic nil "Task-89" :TASK *rekb*)
	node-90 (declare-atomic nil "Task-90" :TASK *rekb*)
	node-91 (declare-atomic nil "Task-91" :TASK *rekb*)
	node-92 (declare-atomic nil "Task-92" :TASK *rekb*)
	node-93 (declare-atomic nil "Task-93" :TASK *rekb*)
	node-94 (declare-atomic nil "Task-94" :TASK *rekb*)
	node-95 (declare-atomic nil "Task-95" :TASK *rekb*)
	node-96 (declare-atomic nil "Task-96" :TASK *rekb*)
	node-97 (declare-atomic nil "Task-97" :TASK *rekb*)
	node-98 (declare-atomic nil "Task-98" :TASK *rekb*)
	node-99 (declare-atomic nil "Task-99" :TASK *rekb*)
)
(assrt-formula node-0 (list node-96 node-1 node-51) :DA "phi-0-0" *rekb*)
(assrt-formula node-0 (list node-60) :DA "phi-0-1" *rekb*)
(assrt-formula node-1 (list node-2 node-3 node-5) :DA "phi-1-0" *rekb*)
(assrt-formula node-1 (list node-7 node-8 node-9) :DA "phi-1-1" *rekb*)
(assrt-formula node-1 (list node-10 node-12 node-13) :DA "phi-1-2" *rekb*)
(assrt-formula node-1 (list node-14 node-15 node-16) :DA "phi-1-3" *rekb*)
(assrt-formula node-1 (list node-19 node-20 node-21) :DA "phi-1-4" *rekb*)
(assrt-formula node-1 (list node-22 node-23 node-25) :DA "phi-1-5" *rekb*)
(assrt-formula node-1 (list node-26 node-27 node-28) :DA "phi-1-6" *rekb*)
(assrt-formula node-1 (list node-29 node-30 node-32) :DA "phi-1-7" *rekb*)
(assrt-formula node-1 (list node-33 node-34 node-35) :DA "phi-1-8" *rekb*)
(assrt-formula node-1 (list node-36 node-37 node-38) :DA "phi-1-9" *rekb*)
(assrt-formula node-1 (list node-39 node-40 node-41) :DA "phi-1-10" *rekb*)
(assrt-formula node-1 (list node-43 node-45 node-46) :DA "phi-1-11" *rekb*)
(assrt-formula node-1 (list node-47 node-48 node-49) :DA "phi-1-12" *rekb*)
(assrt-formula node-1 (list node-50 node-51 node-52) :DA "phi-1-13" *rekb*)
(assrt-formula node-1 (list node-53 node-54 node-55) :DA "phi-1-14" *rekb*)
(assrt-formula node-1 (list node-56 node-57 node-58) :DA "phi-1-15" *rekb*)
(assrt-formula node-1 (list node-59 node-60 node-62) :DA "phi-1-16" *rekb*)
(assrt-formula node-1 (list node-63 node-64 node-65) :DA "phi-1-17" *rekb*)
(assrt-formula node-1 (list node-66 node-67 node-68) :DA "phi-1-18" *rekb*)
(assrt-formula node-1 (list node-69 node-72 node-74) :DA "phi-1-19" *rekb*)
(assrt-formula node-1 (list node-76 node-78 node-80) :DA "phi-1-20" *rekb*)
(assrt-formula node-1 (list node-81 node-83 node-84) :DA "phi-1-21" *rekb*)
(assrt-formula node-1 (list node-85 node-86 node-87) :DA "phi-1-22" *rekb*)
(assrt-formula node-1 (list node-88 node-89 node-90) :DA "phi-1-23" *rekb*)
(assrt-formula node-1 (list node-92 node-93 node-94) :DA "phi-1-24" *rekb*)
(assrt-formula node-1 (list node-95 node-96 node-98) :DA "phi-1-25" *rekb*)
(assrt-formula node-2 (list node-3 node-6) :DA "phi-2-0" *rekb*)
(assrt-formula node-3 (list node-33 node-36 node-70) :DA "phi-3-0" *rekb*)
(assrt-formula node-3 (list node-9 node-11 node-15) :DA "phi-3-1" *rekb*)
(assrt-formula node-3 (list node-24 node-4) :DA "phi-3-2" *rekb*)
(assrt-formula node-4 (list node-18 node-12) :DA "phi-4-0" *rekb*)
(assrt-formula node-32 (list node-72 node-82) :DA "phi-32-0" *rekb*)
(assrt-formula node-40 (list node-42 node-90 node-71) :DA "phi-40-0" *rekb*)
(assrt-formula node-64 (list node-91 node-78) :DA "phi-64-0" *rekb*)
(assrt-formula node-13 (list node-44 node-17 node-54) :DA "phi-13-0" *rekb*)
(assrt-formula node-13 (list node-87 node-24 node-27) :DA "phi-13-1" *rekb*)
(assrt-formula node-14 (list node-18 node-99 node-30) :DA "phi-14-0" *rekb*)
(assrt-formula node-15 (list node-77) :DA "phi-15-0" *rekb*)
(assrt-formula node-16 (list node-75) :DA "phi-16-0" *rekb*)
(assrt-formula node-52 (list node-97 node-93 node-69) :DA "phi-52-0" *rekb*)
(assrt-formula node-52 (list node-81) :DA "phi-52-1" *rekb*)
(assrt-formula node-21 (list node-48 node-61) :DA "phi-21-0" *rekb*)
(assrt-formula node-23 (list node-73 node-66 node-84) :DA "phi-23-0" *rekb*)
(assrt-formula node-23 (list node-42) :DA "phi-23-1" *rekb*)
(assrt-formula node-26 (list node-75 node-31) :DA "phi-26-0" *rekb*)
(assrt-formula node-27 (list node-63 node-45 node-99) :DA "phi-27-0" *rekb*)
(assrt-formula node-27 (list node-57 node-79) :DA "phi-27-1" *rekb*)
(assrt-formula (contradiction *rekb*) (list node-43 node-70) :DA "psi-0" *rekb*)
(assrt-formula (contradiction *rekb*) (list node-86 node-90) :DA "psi-1" *rekb*)
(assrt-formula (contradiction *rekb*) (list node-90 node-48) :DA "psi-2" *rekb*)
(assrt-formula (contradiction *rekb*) (list node-21 node-56) :DA "psi-3" *rekb*)
